@using Microsoft.AspNetCore.Identity
@inject SignInManager<userNewField> SignInManager
@inject UserManager<userNewField> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a  asp-area="Identity" asp-page="/Account/Login" class="nav-item me-4 nav-link p-3 m-1 text-center rounded" style="border: solid 1px purple; color: purple; width:150px;">LOGIN</a>

        @* <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a> *@
    </li>


    <li class="nav-item">
            <a asp-area ="Identity" asp-page="/Account/Register" class="nav-item nav-link p-3 m-1 text-white text-center  rounded" style="background-color: purple; width:250px;">
                SIGNUP</a>

        @* <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a> *@
    </li>
}
</ul>
